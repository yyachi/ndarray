!function(t,r){if("object"==typeof exports&&"object"==typeof module)module.exports=r();else if("function"==typeof define&&define.amd)define([],r);else{var n=r();for(var e in n)("object"==typeof exports?exports:t)[e]=n[e]}}(window,(function(){return function(t){var r={};function n(e){if(r[e])return r[e].exports;var o=r[e]={i:e,l:!1,exports:{}};return t[e].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=t,n.c=r,n.d=function(t,r,e){n.o(t,r)||Object.defineProperty(t,r,{enumerable:!0,get:e})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,r){if(1&r&&(t=n(t)),8&r)return t;if(4&r&&"object"==typeof t&&t&&t.__esModule)return t;var e=Object.create(null);if(n.r(e),Object.defineProperty(e,"default",{enumerable:!0,value:t}),2&r&&"string"!=typeof t)for(var o in t)n.d(e,o,function(r){return t[r]}.bind(null,o));return e},n.n=function(t){var r=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(r,"a",r),r},n.o=function(t,r){return Object.prototype.hasOwnProperty.call(t,r)},n.p="",n(n.s=0)}([function(t,r,n){window.ndarray=n(1)},function(t,r,n){var e=n(2),o=n(3),i="undefined"!=typeof Float64Array;function u(t,r){return t[0]-r[0]}function s(){var t,r=this.stride,n=new Array(r.length);for(t=0;t<n.length;++t)n[t]=[Math.abs(r[t]),t];n.sort(u);var e=new Array(n.length);for(t=0;t<e.length;++t)e[t]=n[t][1];return e}function a(t,r){var n=["View",r,"d",t].join("");r<0&&(n="View_Nil"+t);var o="generic"===t;if(-1===r){var i="function "+n+"(a){this.data=a;};var proto="+n+".prototype;proto.dtype='"+t+"';proto.index=function(){return -1};proto.size=0;proto.dimension=-1;proto.shape=proto.stride=proto.order=[];proto.lo=proto.hi=proto.transpose=proto.step=function(){return new "+n+"(this.data);};proto.get=proto.set=function(){};proto.pick=function(){return null};return function construct_"+n+"(a){return new "+n+"(a);}";return new Function(i)()}if(0===r){i="function "+n+"(a,d) {this.data = a;this.offset = d};var proto="+n+".prototype;proto.dtype='"+t+"';proto.index=function(){return this.offset};proto.dimension=0;proto.size=1;proto.shape=proto.stride=proto.order=[];proto.lo=proto.hi=proto.transpose=proto.step=function "+n+"_copy() {return new "+n+"(this.data,this.offset)};proto.pick=function "+n+"_pick(){return TrivialArray(this.data);};proto.valueOf=proto.get=function "+n+"_get(){return "+(o?"this.data.get(this.offset)":"this.data[this.offset]")+"};proto.set=function "+n+"_set(v){return "+(o?"this.data.set(this.offset,v)":"this.data[this.offset]=v")+"};return function construct_"+n+"(a,b,c,d){return new "+n+"(a,d)}";return new Function("TrivialArray",i)(f[t][0])}i=["'use strict'"];var u=e(r),a=u.map((function(t){return"i"+t})),p="this.offset+"+u.map((function(t){return"this.stride["+t+"]*i"+t})).join("+"),c=u.map((function(t){return"b"+t})).join(","),h=u.map((function(t){return"c"+t})).join(",");i.push("function "+n+"(a,"+c+","+h+",d){this.data=a","this.shape=["+c+"]","this.stride=["+h+"]","this.offset=d|0}","var proto="+n+".prototype","proto.dtype='"+t+"'","proto.dimension="+r),i.push("Object.defineProperty(proto,'size',{get:function "+n+"_size(){return "+u.map((function(t){return"this.shape["+t+"]"})).join("*"),"}})"),1===r?i.push("proto.order=[0]"):(i.push("Object.defineProperty(proto,'order',{get:"),r<4?(i.push("function "+n+"_order(){"),2===r?i.push("return (Math.abs(this.stride[0])>Math.abs(this.stride[1]))?[1,0]:[0,1]}})"):3===r&&i.push("var s0=Math.abs(this.stride[0]),s1=Math.abs(this.stride[1]),s2=Math.abs(this.stride[2]);if(s0>s1){if(s1>s2){return [2,1,0];}else if(s0>s2){return [1,2,0];}else{return [1,0,2];}}else if(s0>s2){return [2,0,1];}else if(s2>s1){return [0,1,2];}else{return [0,2,1];}}})")):i.push("ORDER})")),i.push("proto.set=function "+n+"_set("+a.join(",")+",v){"),o?i.push("return this.data.set("+p+",v)}"):i.push("return this.data["+p+"]=v}"),i.push("proto.get=function "+n+"_get("+a.join(",")+"){"),o?i.push("return this.data.get("+p+")}"):i.push("return this.data["+p+"]}"),i.push("proto.index=function "+n+"_index(",a.join(),"){return "+p+"}"),i.push("proto.hi=function "+n+"_hi("+a.join(",")+"){return new "+n+"(this.data,"+u.map((function(t){return["(typeof i",t,"!=='number'||i",t,"<0)?this.shape[",t,"]:i",t,"|0"].join("")})).join(",")+","+u.map((function(t){return"this.stride["+t+"]"})).join(",")+",this.offset)}");var d=u.map((function(t){return"a"+t+"=this.shape["+t+"]"})),l=u.map((function(t){return"c"+t+"=this.stride["+t+"]"}));i.push("proto.lo=function "+n+"_lo("+a.join(",")+"){var b=this.offset,d=0,"+d.join(",")+","+l.join(","));for(var b=0;b<r;++b)i.push("if(typeof i"+b+"==='number'&&i"+b+">=0){d=i"+b+"|0;b+=c"+b+"*d;a"+b+"-=d}");i.push("return new "+n+"(this.data,"+u.map((function(t){return"a"+t})).join(",")+","+u.map((function(t){return"c"+t})).join(",")+",b)}"),i.push("proto.step=function "+n+"_step("+a.join(",")+"){var "+u.map((function(t){return"a"+t+"=this.shape["+t+"]"})).join(",")+","+u.map((function(t){return"b"+t+"=this.stride["+t+"]"})).join(",")+",c=this.offset,d=0,ceil=Math.ceil");for(b=0;b<r;++b)i.push("if(typeof i"+b+"==='number'){d=i"+b+"|0;if(d<0){c+=b"+b+"*(a"+b+"-1);a"+b+"=ceil(-a"+b+"/d)}else{a"+b+"=ceil(a"+b+"/d)}b"+b+"*=d}");i.push("return new "+n+"(this.data,"+u.map((function(t){return"a"+t})).join(",")+","+u.map((function(t){return"b"+t})).join(",")+",c)}");var y=new Array(r),j=new Array(r);for(b=0;b<r;++b)y[b]="a[i"+b+"]",j[b]="b[i"+b+"]";i.push("proto.transpose=function "+n+"_transpose("+a+"){"+a.map((function(t,r){return t+"=("+t+"===undefined?"+r+":"+t+"|0)"})).join(";"),"var a=this.shape,b=this.stride;return new "+n+"(this.data,"+y.join(",")+","+j.join(",")+",this.offset)}"),i.push("proto.pick=function "+n+"_pick("+a+"){var a=[],b=[],c=this.offset");for(b=0;b<r;++b)i.push("if(typeof i"+b+"==='number'&&i"+b+">=0){c=(c+this.stride["+b+"]*i"+b+")|0}else{a.push(this.shape["+b+"]);b.push(this.stride["+b+"])}");return i.push("var ctor=CTOR_LIST[a.length+1];return ctor(this.data,a,b,c)}"),i.push("return function construct_"+n+"(data,shape,stride,offset){return new "+n+"(data,"+u.map((function(t){return"shape["+t+"]"})).join(",")+","+u.map((function(t){return"stride["+t+"]"})).join(",")+",offset)}"),new Function("CTOR_LIST","ORDER",i.join("\n"))(f[t],s)}var f={float32:[],float64:[],int8:[],int16:[],int32:[],uint8:[],uint16:[],uint32:[],array:[],uint8_clamped:[],bigint64:[],biguint64:[],buffer:[],generic:[]};t.exports=function(t,r,n,e){if(void 0===t)return(0,f.array[0])([]);"number"==typeof t&&(t=[t]),void 0===r&&(r=[t.length]);var u=r.length;if(void 0===n){n=new Array(u);for(var s=u-1,p=1;s>=0;--s)n[s]=p,p*=r[s]}if(void 0===e){e=0;for(s=0;s<u;++s)n[s]<0&&(e-=(r[s]-1)*n[s])}for(var c=function(t){if(o(t))return"buffer";if(i)switch(Object.prototype.toString.call(t)){case"[object Float64Array]":return"float64";case"[object Float32Array]":return"float32";case"[object Int8Array]":return"int8";case"[object Int16Array]":return"int16";case"[object Int32Array]":return"int32";case"[object Uint8Array]":return"uint8";case"[object Uint16Array]":return"uint16";case"[object Uint32Array]":return"uint32";case"[object Uint8ClampedArray]":return"uint8_clamped";case"[object BigInt64Array]":return"bigint64";case"[object BigUint64Array]":return"biguint64"}return Array.isArray(t)?"array":"generic"}(t),h=f[c];h.length<=u+1;)h.push(a(c,h.length-1));return(0,h[u+1])(t,r,n,e)}},function(t,r,n){"use strict";t.exports=function(t){for(var r=new Array(t),n=0;n<t;++n)r[n]=n;return r}},function(t,r){function n(t){return!!t.constructor&&"function"==typeof t.constructor.isBuffer&&t.constructor.isBuffer(t)}
/*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
t.exports=function(t){return null!=t&&(n(t)||function(t){return"function"==typeof t.readFloatLE&&"function"==typeof t.slice&&n(t.slice(0,0))}(t)||!!t._isBuffer)}}])}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,